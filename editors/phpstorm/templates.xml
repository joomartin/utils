<templateSet group="user">
  <template name="textf" value="&lt;div class=&quot;form-group&quot;&gt;&#10;    &lt;label for=&quot;$NAME$&quot;&gt;$VALUE$&lt;/label&gt;&#10;    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;$NAME$&quot; placeholder=&quot;place&quot;&gt;&#10;&lt;/div&gt;" description="Form Text Field" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="capitalize(NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="bbtn" value="&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; id=&quot;$ID$&quot;&gt;$NAME$&lt;/button&gt;" description="Bootstrap button" toReformat="false" toShortenFQNames="true">
    <variable name="ID" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="capitalize(ID)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="_c" value="public function __construct($ARGS$)&#10;{&#10;    $END$&#10;}" description="Constructor" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="met" value="public function $NAME$($ARGS$)&#10;{&#10;    $END$&#10;}" description="public method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="ae" value="$this-&gt;assertEquals($EXPECTED$, $ACTUAL$);" description="Assert Equals" toReformat="false" toShortenFQNames="true">
    <variable name="EXPECTED" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ACTUAL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="at" value="$this-&gt;assertTrue($ACTUAL$);" description="Assert True" toReformat="false" toShortenFQNames="true">
    <variable name="ACTUAL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="af" value="$this-&gt;assertFalse($ACTUAL$);" description="Assert False" toReformat="false" toShortenFQNames="true">
    <variable name="ACTUAL" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pmet" value="protected function $NAME$($ARGS$)&#10;{&#10;    $END$&#10;}" description="protected method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="imet" value="public function $NAME$($ARGS$);" description="interface method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="$" value="$this-&gt;$END$" description="$this" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pvar" value="/**&#10; * @var&#10; */&#10; protected $NAME$;" description="protected variable" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="smet" value="public static function $NAME$($ARGS$)&#10;{&#10;    $END$&#10;}" description="static method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="sr" value="shouldReturn($ARGS$);$END$" description="shouldReturn" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="se" value="shouldEqual($ARGS$);$END$" description="shouldEqual" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="fori" value="for ($i = 0; $i &lt; $ARGS$; $i++) {&#10;    $END$&#10;}" description="for" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="it_" value="function it_$NAME$() &#10;{&#10;    $this-&gt;$METHOD$($ARGS$)-&gt;shouldReturn($RETURN$);&#10;}" description="function it_" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="amet" value="abstract public function $NAME$($ARGS$);" description="abstract public function" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="llq" value="Log::instance()-&gt;add(Log::DEBUG, Database::instance()-&gt;last_query);" description="Log Last Query" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="desc" value="describe('$NAME$', function () {&#10;    $END$&#10;});" description="Kahlan Describe" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="con" value="context('$NAME$', function () {&#10;    $END$&#10;});" description="Kahlan Context" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="it" value="it('$NAME$', function () {&#10;    $END$&#10;});" description="Kahlan It" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="ex" value="expect($$$ARGS$)-&gt;toBe($VALUE$);" description="Kahlan Expect To Be" toReformat="false" toShortenFQNames="true">
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="sbc" value="shouldBeCalled();" description="shouldBeCalled" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="sb" value="shouldBe();" description="shouldBe" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="vd" value="var_dump($$$ARG$);" description="var_dump" toReformat="false" toShortenFQNames="true">
    <variable name="ARG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="utest" value="/** @test */&#10;function it_$NAME$()&#10;{&#10;    $END$&#10;}" description="Unit test method" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>